services:
  rabbit:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-service

  configserver:
    image: "dekankilic/configserver:s9"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1" # Give instructions on how to evaluate whether my config server is started and ready to accept the request
      interval: 10s
      timeout: 5s
      retries: 10 # if there is a failure, please do retries for 10 times with an interval of 10 seconds
      start_period: 10s # please try to execute this health check command only after 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "dekankilic/eurekaserver:s9"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1" # Give instructions on how to evaluate whether my eureka server is started and ready to accept the request
      interval: 10s
      timeout: 5s
      retries: 10 # if there is a failure, please do retries for 10 times with an interval of 10 seconds
      start_period: 10s # please try to execute this health check command only after 10s
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/ # we need to specify this because each service runs inside its own isolated environment, so the implication inside application.yml file of accounts service will not be sufficient. It tries to connect to localhost:8071 inside its own isolated container. So, we need to override the values inside application.yml of accounts microservice so that it can connect to configserver.
    extends:
      file: common-config.yml
      service: microservice-base-config

  accounts:
    image: "dekankilic/accounts:s9"
    container_name: account-ms
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1" # Give instructions on how to evaluate whether my eureka server is started and ready to accept the request
      interval: 10s
      timeout: 5s
      retries: 10 # if there is a failure, please do retries for 10 times with an interval of 10 seconds
      start_period: 10s # please try to execute this health check command only after 10s
    environment:
      SPRING_APPLICATION_NAME: "accounts"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  loans:
    image: "dekankilic/loans:s9"
    container_name: loans-ms
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1" # Give instructions on how to evaluate whether my eureka server is started and ready to accept the request
      interval: 10s
      timeout: 5s
      retries: 10 # if there is a failure, please do retries for 10 times with an interval of 10 seconds
      start_period: 10s # please try to execute this health check command only after 10s
    environment:
      SPRING_APPLICATION_NAME: "loans"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  cards:
    image: "dekankilic/cards:s9"
    container_name: cards-ms
    ports:
      - "9000:9000"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1" # Give instructions on how to evaluate whether my eureka server is started and ready to accept the request
      interval: 10s
      timeout: 5s
      retries: 10 # if there is a failure, please do retries for 10 times with an interval of 10 seconds
      start_period: 10s # please try to execute this health check command only after 10s
    environment:
      SPRING_APPLICATION_NAME: "cards"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  gatewayserver:
    image: "dekankilic/gatewayserver:s9"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on:
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

networks:
  dekanbank:
    driver: "bridge"

