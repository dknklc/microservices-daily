server:
  port: 8080

spring:
  application:
    name: accounts
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
  jpa:
    show-sql: true
  sql: # means use the schema.sql file
    init:
      mode: always
  profiles:
    active: "prod"
  config: # We need to communicate to accounts microservice about the endpoint details of config server.
    import: "optional:configserver:http://localhost:8071/" # configserver in here is an indication to accounts microservice that it is going to connect with the config server, do not confuse with the name of the config server we have chosen.
  # This is for refreshing configurations at runtime using Spring Cloud Bus
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"


# This is for refreshing configurations at runtime using refresh actuator path
# To enable the actuator API paths. By default, Actuator is not going to expose all the management related API paths. That's why we need to specifically enable them.
management:
  endpoints:
    web:
      exposure:
        include: "*" # means please enable and expose all management endpoint supported by the Spring Boot Actuator.